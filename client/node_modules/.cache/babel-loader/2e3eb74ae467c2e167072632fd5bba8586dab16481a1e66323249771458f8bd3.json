{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\WhiteBoard\\\\client\\\\src\\\\components\\\\UserCursors.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CURSOR_COLORS = [\"#FF0000\", \"#0000FF\", \"#00FF00\", \"#FFFF00\", \"#FF00FF\", \"#00FFFF\"];\nlet colorIndex = 0;\nfunction UserCursors({\n  socket,\n  roomId\n}) {\n  _s();\n  const [cursors, setCursors] = useState({});\n  const cursorColors = React.useRef({});\n  useEffect(() => {\n    const handleCursorMove = data => {\n      if (!cursorColors.current[data.id]) {\n        cursorColors.current[data.id] = CURSOR_COLORS[colorIndex % CURSOR_COLORS.length];\n        colorIndex++;\n      }\n      setCursors(prev => ({\n        ...prev,\n        [data.id]: {\n          ...data,\n          color: cursorColors.current[data.id]\n        }\n      }));\n    };\n    const handleUserLeft = ({\n      id\n    }) => {\n      setCursors(prev => {\n        const newCursors = {\n          ...prev\n        };\n        delete newCursors[id];\n        return newCursors;\n      });\n      delete cursorColors.current[id];\n    };\n\n    // Throttle on the client side too for sending our own position\n    const handleMouseMove = e => {\n      socket.emit(\"cursor-move\", {\n        roomId,\n        x: e.clientX,\n        y: e.clientY\n      });\n    };\n    const throttledMove = e => {\n      /* use a throttle hook here */handleMouseMove(e);\n    };\n    window.addEventListener(\"mousemove\", throttledMove);\n    socket.on(\"cursor-move\", handleCursorMove);\n    socket.on(\"user-left\", handleUserLeft);\n    return () => {\n      window.removeEventListener(\"mousemove\", throttledMove);\n      socket.off(\"cursor-move\", handleCursorMove);\n      socket.off(\"user-left\", handleUserLeft);\n    };\n  }, [socket, roomId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cursors-container\",\n    children: Object.values(cursors).map(cursor => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-cursor\",\n      style: {\n        left: `${cursor.x}px`,\n        top: `${cursor.y}px`,\n        backgroundColor: cursor.color\n      }\n    }, cursor.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(UserCursors, \"LNWGinoHjY8ZC7G7MZ36Hyqaa8Q=\");\n_c = UserCursors;\nexport default UserCursors;\nvar _c;\n$RefreshReg$(_c, \"UserCursors\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CURSOR_COLORS","colorIndex","UserCursors","socket","roomId","_s","cursors","setCursors","cursorColors","useRef","handleCursorMove","data","current","id","length","prev","color","handleUserLeft","newCursors","handleMouseMove","e","emit","x","clientX","y","clientY","throttledMove","window","addEventListener","on","removeEventListener","off","className","children","Object","values","map","cursor","style","left","top","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Projects/WhiteBoard/client/src/components/UserCursors.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst CURSOR_COLORS = [\r\n    \"#FF0000\",\r\n    \"#0000FF\",\r\n    \"#00FF00\",\r\n    \"#FFFF00\",\r\n    \"#FF00FF\",\r\n    \"#00FFFF\",\r\n];\r\nlet colorIndex = 0;\r\n\r\nfunction UserCursors({ socket, roomId }) {\r\n    const [cursors, setCursors] = useState({});\r\n    const cursorColors = React.useRef({});\r\n\r\n    useEffect(() => {\r\n        const handleCursorMove = (data) => {\r\n            if (!cursorColors.current[data.id]) {\r\n                cursorColors.current[data.id] =\r\n                    CURSOR_COLORS[colorIndex % CURSOR_COLORS.length];\r\n                colorIndex++;\r\n            }\r\n            setCursors((prev) => ({\r\n                ...prev,\r\n                [data.id]: { ...data, color: cursorColors.current[data.id] },\r\n            }));\r\n        };\r\n\r\n        const handleUserLeft = ({ id }) => {\r\n            setCursors((prev) => {\r\n                const newCursors = { ...prev };\r\n                delete newCursors[id];\r\n                return newCursors;\r\n            });\r\n            delete cursorColors.current[id];\r\n        };\r\n\r\n        // Throttle on the client side too for sending our own position\r\n        const handleMouseMove = (e) => {\r\n            socket.emit(\"cursor-move\", { roomId, x: e.clientX, y: e.clientY });\r\n        };\r\n        const throttledMove = (e) => {\r\n            /* use a throttle hook here */ handleMouseMove(e);\r\n        };\r\n\r\n        window.addEventListener(\"mousemove\", throttledMove);\r\n        socket.on(\"cursor-move\", handleCursorMove);\r\n        socket.on(\"user-left\", handleUserLeft);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"mousemove\", throttledMove);\r\n            socket.off(\"cursor-move\", handleCursorMove);\r\n            socket.off(\"user-left\", handleUserLeft);\r\n        };\r\n    }, [socket, roomId]);\r\n\r\n    return (\r\n        <div className=\"cursors-container\">\r\n            {Object.values(cursors).map((cursor) => (\r\n                <div\r\n                    key={cursor.id}\r\n                    className=\"user-cursor\"\r\n                    style={{\r\n                        left: `${cursor.x}px`,\r\n                        top: `${cursor.y}px`,\r\n                        backgroundColor: cursor.color,\r\n                    }}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\nexport default UserCursors;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}